{"version":3,"sources":["components/Navbar/index.jsx","components/Loader/index.jsx","components/Footer/index.jsx","services/cryptoApi.js","pages/Homepage.jsx","pages/Exchanges.jsx","pages/Crypto.jsx","components/LineChart/index.jsx","pages/CryptoDetails.jsx","services/cryptoNewsApi.js","pages/News.jsx","App.js","app/store.js","index.js"],"names":["Navbar","useState","activeMenu","setActiveMenu","undefined","screenSize","setScreenSize","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","Title","level","to","onClick","MenuOutlined","theme","Item","key","icon","HomeOutlined","FundOutlined","MoneyCollectOutlined","BulbOutlined","Loader","Footer","style","color","textAlign","cryptoApiHeaders","createRequest","url","headers","cryptoApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","endpoints","builder","getCryptos","query","count","getCryptoDetails","coinId","getCryptoHistory","timePeriod","getExchanges","useGetCryptosQuery","useGetCryptoDetailsQuery","useGetCryptoHistoryQuery","useGetExchangesQuery","Typography","Homepage","data","isFetching","globalStats","stats","gutter","span","title","value","total","millify","totalExchanges","totalMarketCap","total24hVolume","totalMarkets","simplified","Text","Panel","Collapse","Exchanges","exchangesList","exchanges","map","exchange","id","showArrow","header","rank","src","iconUrl","name","volume","numberOfMarkets","marketShare","HTMLReactParser","description","Crypto","cryptosList","cryptos","setCryptos","searchTerm","setSearchTerm","coins","filteredData","filter","item","toLowerCase","includes","placeholder","onChange","e","target","currency","xs","sm","lg","extra","alt","hoverable","price","marketCap","change","LineChart","coinHistory","currentPrice","coinName","coinPrice","coinTimeStamp","i","history","length","push","Date","timestamp","toLocaleDateString","labels","datasets","label","fill","backgroundColor","borderColor","options","scale","yAxes","ticks","beginAtZero","Option","Select","CryptoDetails","useParams","setTimePeriod","cryptoDetails","coin","DollarCircleOutlined","NumberOutlined","ThunderboltOutlined","allTimeHigh","TrophyOutlined","genericStats","numberOfExchanges","approvedSupply","CheckOutlined","StopOutlined","ExclamationCircleOutlined","totalSupply","circulatingSupply","console","log","slug","defaultValue","date","links","link","type","href","rel","cryptoNewsApiHeaders","cryptoNewsApi","getCryptoNews","newsCategory","useGetCryptoNewsQuery","demoImageUrl","News","setNewsCategory","cryptoNews","showSearch","optionFilterProp","filterOption","input","option","children","indexOf","news","maxWidth","maxHeight","image","thumbnail","contentUrl","substring","provider","moment","datePublished","startOf","fromNow","App","exact","path","configureStore","reducer","middleware","getDefaultMiddleware","concat","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"6YAsDeA,G,OAjDO,WAClB,MAAsCC,oBAAS,GAA/C,mBAAQC,EAAR,KAAoBC,EAApB,KACA,EAAqCF,wBAASG,GAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KAmBA,OAjBAC,qBAAU,WACN,IAAMC,EAAe,kBAAMF,EAAcG,OAAOC,aAIhD,OAHAD,OAAOE,iBAAiB,SAAUH,GAElCA,IACO,kBAAMC,OAAOG,oBAAoB,SAAUJ,MACnD,IAEHD,qBAAU,WAEFJ,IADDE,GAAc,QAKlB,CAACA,IAIA,yBAAKQ,UAAW,iBACZ,yBAAKA,UAAW,kBAEZ,kBAAC,IAAWC,MAAZ,CAAkBC,MAAO,EAAGF,UAAU,QAClC,kBAAC,IAAD,CAAMG,GAAG,KAAT,gBAEJ,kBAAC,IAAD,CAAQH,UAAW,yBAAyBI,QAAS,kBAAMd,GAAeD,KAAa,kBAACgB,EAAA,EAAD,QAE1FhB,GACD,kBAAC,IAAD,CAAMiB,MAAM,OAAON,UAAU,YACzB,kBAAC,IAAKO,KAAN,CAAWC,IAAK,QAASC,KAAM,kBAACC,EAAA,EAAD,OAC3B,kBAAC,IAAD,CAAMP,GAAG,KAAT,SAEJ,kBAAC,IAAKI,KAAN,CAAWC,IAAK,WAAYC,KAAM,kBAACE,EAAA,EAAD,OAC9B,kBAAC,IAAD,CAAMR,GAAG,WAAT,sBAEJ,kBAAC,IAAKI,KAAN,CAAWC,IAAK,aAAcC,KAAM,kBAACG,EAAA,EAAD,OAChC,kBAAC,IAAD,CAAMT,GAAG,cAAT,cAEJ,kBAAC,IAAKI,KAAN,CAAWC,IAAK,QAASC,KAAM,kBAACI,EAAA,EAAD,OAC3B,kBAAC,IAAD,CAAMV,GAAG,SAAT,aCnCLW,G,OATA,WACX,OACI,yBAAKd,UAAW,oBACZ,yBAAKA,UAAW,c,SCiBbe,G,OAlBA,WACb,OACE,yBAAKf,UAAU,UACb,kBAAC,IAAWC,MAAZ,CACEC,MAAO,EACPc,MAAO,CAAEC,MAAO,UAAWC,UAAW,WAFxC,mBAMA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAMf,GAAG,KAAT,QACA,kBAAC,IAAD,CAAMA,GAAG,cAAT,aACA,kBAAC,IAAD,CAAMA,GAAG,SAAT,Y,2DChBFgB,EAAmB,CACvB,kBAAmB,8BACnB,iBAAkB,sDAKdC,EAAgB,SAACC,GAAD,MAAU,CAAEA,MAAKC,QAASH,IAEnCI,EAAYC,YAAU,CACjCC,YAAa,YACbC,UAAWC,YAAe,CAAEC,QANd,wCAOdC,UAAW,SAACC,GAAD,MAAc,CACvBC,WAAYD,EAAQE,MAAM,CACxBA,MAAO,SAACC,GAAD,OAAWb,EAAc,gBAAD,OAAiBa,OAElDC,iBAAkBJ,EAAQE,MAAM,CAC9BA,MAAO,SAACG,GAAD,OAAYf,EAAc,SAAD,OAAUe,OAE5CC,iBAAkBN,EAAQE,MAAM,CAC9BA,MAAO,gBAAEG,EAAF,EAAEA,OAAQE,EAAV,EAAUA,WAAV,OAA0BjB,EAAc,SAAD,OAAUe,EAAV,oBAA4BE,OAE5EC,aAAcR,EAAQE,MAAM,CAC1BA,MAAO,kBAAMZ,EAAc,qBAKlBmB,EAAiGhB,EAAjGgB,mBAAoBC,EAA6EjB,EAA7EiB,yBAA0BC,EAAmDlB,EAAnDkB,yBAA0BC,EAAyBnB,EAAzBmB,qBCtB/EzC,EAAU0C,IAAV1C,MAqCO2C,EAjCE,WAAO,IAAD,EACnB,EAA6BL,EAAmB,IAAxCM,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACRC,EAAW,OAAGF,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYG,MAGhC,OAAGF,EAAmB,kBAAC,EAAD,MAElB,yCAAI,yBAAK9C,UAAU,yBACf,kBAACC,EAAD,CAAOC,MAAO,EAAGF,UAAU,WAA3B,uBACA,kBAAC,IAAD,CAAKiD,OAAQ,CAAC,GAAI,KACd,kBAAC,IAAD,CAAKC,KAAM,IAAI,kBAAC,IAAD,CAAWC,MAAM,yBAAyBC,MAAQL,EAAYM,SAC7E,kBAAC,IAAD,CAAKH,KAAM,IAAI,kBAAC,IAAD,CAAWC,MAAM,kBAAkBC,MAAQE,IAAQP,EAAYQ,mBAC9E,kBAAC,IAAD,CAAKL,KAAM,IAAI,kBAAC,IAAD,CAAWC,MAAM,mBAAmBC,MAAQE,IAAQP,EAAYS,mBAC/E,kBAAC,IAAD,CAAKN,KAAM,IAAI,kBAAC,IAAD,CAAWC,MAAM,uBAAuBC,MAAQE,IAAQP,EAAYU,mBACnF,kBAAC,IAAD,CAAKP,KAAM,IAAI,kBAAC,IAAD,CAAWC,MAAM,sBAAsBC,MAAQE,IAAQP,EAAYW,mBAGtF,yBAAK1D,UAAU,qBACf,yBAAKA,UAAU,0BACX,kBAACC,EAAD,CAAOC,MAAO,EAAGF,UAAU,cAA3B,2BACA,kBAACC,EAAD,CAAOC,MAAO,EAAGF,UAAU,aAAY,kBAAC,IAAD,CAAMG,GAAG,WAAT,gBAG3C,kBAAC,EAAD,CAAQwD,YAAU,IAClB,yBAAK3D,UAAU,0BACX,kBAACC,EAAD,CAAOC,MAAO,EAAGF,UAAU,cAA3B,sBACA,kBAACC,EAAD,CAAOC,MAAO,GAAG,kBAAC,IAAD,CAAMC,GAAG,SAAT,eAErB,kBAAC,GAAD,CAAMwD,YAAU,M,2BC/BpBC,EAASjB,IAATiB,KACAC,EAAUC,IAAVD,MA6COE,EA3CG,WAAO,IAAD,EACpB,EAA6BrB,IAArBG,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACRkB,EAAa,OAAGnB,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAYoB,UAClC,OAAInB,EAAmB,kBAAC,EAAD,MAGnB,oCACA,kBAAC,IAAD,CAAK9C,UAAU,6BACX,kBAAC,IAAD,CAAKkD,KAAM,GAAX,cACA,kBAAC,IAAD,CAAKA,KAAM,GAAX,0BACA,kBAAC,IAAD,CAAKA,KAAM,GAAX,YACA,kBAAC,IAAD,CAAKA,KAAM,GAAX,YAEJ,kBAAC,IAAD,KACKc,EAAcE,KAAI,SAACC,GAAD,OACf,kBAAC,IAAD,CAAKjB,KAAM,IACP,kBAAC,IAAD,KACA,kBAACW,EAAD,CACIrD,IAAK2D,EAASC,GACdC,WAAW,EACXC,OACI,kBAAC,IAAD,CAAK9D,IAAM2D,EAASC,IAChB,kBAAC,IAAD,CAAKlB,KAAM,GACP,kBAACU,EAAD,KAAM,gCAASO,EAASI,KAAlB,MACN,kBAAC,IAAD,CAAQvE,UAAU,iBAAiBwE,IAAML,EAASM,UAClD,kBAACb,EAAD,KAAM,gCAASO,EAASO,QAE5B,kBAAC,IAAD,CAAKxB,KAAM,GAAX,IAAgBI,IAAQa,EAASQ,SACjC,kBAAC,IAAD,CAAKzB,KAAM,GAAX,IAAgBI,IAAQa,EAASS,kBACjC,kBAAC,IAAD,CAAK1B,KAAM,GAAX,IAAgBI,IAAQa,EAASU,gBAIpCC,YAAgBX,EAASY,aAAe,a,kBCkBtDC,EAxDA,SAAC,GAAoB,IAAlBrB,EAAiB,EAAjBA,WAEhB,EAA0CpB,EAD5BoB,EAAa,GAAK,KAClBsB,EAAd,EAAQpC,KAAmBC,EAA3B,EAA2BA,WAC3B,EAA8B1D,qBAA9B,mBAAO8F,EAAP,KAAgBC,EAAhB,KACA,EAAoC/F,mBAAS,IAA7C,mBAAOgG,EAAP,KAAmBC,EAAnB,KAWA,OATA3F,qBAAU,WAAO,IAAD,IACdyF,EAAU,OAACF,QAAD,IAACA,GAAD,UAACA,EAAapC,YAAd,aAAC,EAAmByC,OAC9B,IAAMC,EAAY,OAAGN,QAAH,IAAGA,GAAH,UAAGA,EAAapC,YAAhB,aAAG,EAAmByC,MAAME,QAAO,SAACC,GAAD,OACnDA,EAAKf,KAAKgB,cAAcC,SAASP,MAGnCD,EAAWI,KACV,CAACN,EAAaG,IAEbtC,EAAmB,kBAAC,EAAD,MAGrB,qCACIa,GACA,yBAAK3D,UAAU,iBACb,kBAAC,IAAD,CACE4F,YAAY,gBACZC,SAAU,SAACC,GAAD,OAAOT,EAAcS,EAAEC,OAAO3C,WAK9C,kBAAC,IAAD,CAAKH,OAAQ,CAAC,GAAI,IAAKjD,UAAU,yBAAjC,OACGkF,QADH,IACGA,OADH,EACGA,EAAShB,KAAI,SAAC8B,GAAD,OACZ,kBAAC,IAAD,CAAKC,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAGnG,UAAU,cAAcQ,IAAKwF,EAAS5B,IAChE,kBAAC,IAAD,CAAMjE,GAAE,kBAAa6F,EAAS5B,KAC5B,kBAAC,IAAD,CACE9D,MAAM,OACN6C,MAAK,UAAK6C,EAASzB,KAAd,aAAuByB,EAAStB,MACrC0B,MACE,yBACEpG,UAAU,eACVwE,IAAKwB,EAASvB,QACd4B,IAAI,gBAGRC,WAAS,GAET,sCAAYhD,IAAQ0C,EAASO,OAA7B,QACA,0CAAgBjD,IAAQ0C,EAASQ,YACjC,4CAAkBlD,IAAQ0C,EAASS,kB,qFChD3CxG,GAAU0C,IAAV1C,MAwDOyG,GAtDG,SAAC,GAIjB,IAJ8D,IAAD,EAA1CC,EAA0C,EAA1CA,YAAaC,EAA6B,EAA7BA,aAAcC,EAAe,EAAfA,SACxCC,EAAY,GACZC,EAAgB,GAEbC,EAAI,EAAGA,GAAC,OAAGL,QAAH,IAAGA,GAAH,UAAGA,EAAa9D,YAAhB,iBAAG,EAAmBoE,eAAtB,aAAG,EAA4BC,QAAQF,GAAK,EAAG,CAAC,IAAD,IAC9DF,EAAUK,KAAKR,EAAY9D,KAAKoE,QAAQD,GAAGT,OAC3CQ,EAAcI,KACZ,IAAIC,KAAKT,EAAY9D,KAAKoE,QAAQD,GAAGK,WAAWC,sBAGpD,IAAMzE,EAAO,CACX0E,OAAQR,EACRS,SAAU,CACR,CACEC,MAAO,eACP5E,KAAMiE,EACNY,MAAM,EACNC,gBAAiB,UACjBC,YAAa,aAgBnB,OACE,oCACE,kBAAC,IAAD,CAAK5H,UAAU,gBACb,kBAAC,GAAD,CAAOE,MAAO,EAAGF,UAAU,eACxB6G,GAEH,kBAAC,IAAD,CAAK7G,UAAU,mBACb,kBAAC,GAAD,CAAOE,MAAO,EAAGF,UAAU,gBAA3B,OACG2G,QADH,IACGA,GADH,UACGA,EAAa9D,YADhB,aACG,EAAmB4D,OADtB,KAGA,kBAAC,GAAD,CAAOvG,MAAO,EAAGF,UAAU,iBAA3B,WACW6G,EADX,aAC+BD,EAD/B,OAKJ,kBAAC,KAAD,CAAM/D,KAAMA,EAAMgF,QA1BN,CACdC,MAAO,CACLC,MAAO,CACL,CACEC,MAAO,CACLC,aAAa,WCdjBhI,GAAgB0C,IAAhB1C,MAAO2D,GAASjB,IAATiB,KACPsE,GAAWC,IAAXD,OA0JOE,GAxJO,WAAO,IAAD,EAClBjG,EAAWkG,cAAXlG,OACR,EAAoC/C,mBAAS,OAA7C,mBAAOiD,EAAP,KAAmBiG,EAAnB,KACA,EAA6B9F,EAAyBL,GAA9CU,EAAR,EAAQA,KAAMC,EAAd,EAAcA,WACA6D,EAAgBlE,EAAyB,CAACN,SAAQE,eAAxDQ,KAEF0F,EAAa,OAAG1F,QAAH,IAAGA,GAAH,UAAGA,EAAMA,YAAT,aAAG,EAAY2F,KAGlC,GAAI1F,EAAY,OAAO,kBAAC,EAAD,MACvB,IAEME,EAAQ,CACZ,CACEG,MAAO,eACPC,MAAM,KAAD,OAAOmF,EAAchC,OAASjD,IAAQiF,EAAchC,QACzD9F,KAAM,kBAACgI,EAAA,EAAD,OAER,CAAEtF,MAAO,OAAQC,MAAOmF,EAAchE,KAAM9D,KAAM,kBAACiI,EAAA,EAAD,OAClD,CACEvF,MAAO,aACPC,MAAM,KAAD,OAAOmF,EAAc5D,QAAUrB,IAAQiF,EAAc5D,SAC1DlE,KAAM,kBAACkI,EAAA,EAAD,OAER,CACExF,MAAO,aACPC,MAAM,KAAD,OAAOmF,EAAc/B,WAAalD,IAAQiF,EAAc/B,YAC7D/F,KAAM,kBAACgI,EAAA,EAAD,OAER,CACEtF,MAAO,4BACPC,MAAM,KAAD,OAAOE,IAAQiF,EAAcK,YAAYrC,QAC9C9F,KAAM,kBAACoI,EAAA,EAAD,QAIJC,EAAe,CACnB,CACE3F,MAAO,oBACPC,MAAOmF,EAAc3D,gBACrBnE,KAAM,kBAACE,EAAA,EAAD,OAER,CACEwC,MAAO,sBACPC,MAAOmF,EAAcQ,kBACrBtI,KAAM,kBAACG,EAAA,EAAD,OAER,CACEuC,MAAO,kBACPC,MAAOmF,EAAcS,eACnB,kBAACC,GAAA,EAAD,MAEA,kBAACC,GAAA,EAAD,MAEFzI,KAAM,kBAAC0I,GAAA,EAAD,OAER,CACEhG,MAAO,eACPC,MAAM,KAAD,OAAOE,IAAQiF,EAAca,cAClC3I,KAAM,kBAAC0I,GAAA,EAAD,OAER,CACEhG,MAAO,qBACPC,MAAM,KAAD,OAAOE,IAAQiF,EAAcc,oBAClC5I,KAAM,kBAAC0I,GAAA,EAAD,QAIV,OADEG,QAAQC,IAAI5C,GAEZ,kBAAC,IAAD,CAAK3G,UAAU,yBACb,kBAAC,IAAD,CAAKA,UAAU,0BACb,kBAAC,GAAD,CAAOE,MAAO,EAAGF,UAAU,aACxBuI,EAAc7D,KADjB,KACyB6D,EAAciB,KADvC,WAGA,2BACGjB,EAAc7D,KADjB,sEAKF,kBAAC,IAAD,CACEpE,MAAM,OACNmJ,aAAa,MACbzJ,UAAU,oBACV4F,YAAY,qBACZC,SAAU,SAACzC,GAAD,OAAWkF,EAAclF,KA1E5B,CAAC,MAAO,KAAM,MAAO,KAAM,MA4E5Bc,KAAI,SAACwF,GAAD,OACR,kBAACxB,GAAD,CAAQ1H,IAAKkJ,GAAOA,OAGxB,kBAAC,GAAD,CAAW/C,YAAaA,EAAaC,aAActD,IAAQiF,EAAchC,OAAQM,SAAU0B,EAAc7D,OACzG,kBAAC,IAAD,CAAK1E,UAAU,mBACb,kBAAC,IAAD,CAAKA,UAAU,yBACb,kBAAC,IAAD,CAAKA,UAAU,iCACb,kBAAC,GAAD,CAAOE,MAAO,EAAGF,UAAU,wBACxBuI,EAAc7D,KADjB,qBAGA,2BAAI6D,EAAc7D,KAAlB,yBAED1B,EAAMkB,KAAI,gBAAGzD,EAAH,EAAGA,KAAM0C,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,MAAhB,OACT,kBAAC,IAAD,CAAKpD,UAAU,aAAYQ,IAAK2C,GAC9B,kBAAC,IAAD,CAAKnD,UAAU,mBACb,kBAAC,GAAD,KAAOS,GACP,kBAAC,GAAD,KAAO0C,IAET,kBAAC,GAAD,CAAMnD,UAAU,SAASoD,QAI/B,kBAAC,IAAD,CAAKpD,UAAU,oBACb,kBAAC,IAAD,CAAKA,UAAU,iCACb,kBAAC,GAAD,CAAOE,MAAO,EAAGF,UAAU,wBAA3B,oBAGA,2EAED8I,EAAa5E,KAAI,gBAAGzD,EAAH,EAAGA,KAAM0C,EAAT,EAASA,MAAOC,EAAhB,EAAgBA,MAAhB,OAChB,kBAAC,IAAD,CAAKpD,UAAU,aAAYQ,IAAK2C,GAC9B,kBAAC,IAAD,CAAKnD,UAAU,mBACb,kBAAC,GAAD,KAAOS,GACP,kBAAC,GAAD,KAAO0C,IAET,kBAAC,GAAD,CAAMnD,UAAU,SAASoD,SAKjC,kBAAC,IAAD,CAAKpD,UAAU,kBACb,kBAAC,IAAD,CAAKA,UAAU,aACb,kBAAC,GAAD,CAAOE,MAAO,EAAGF,UAAW,wBAA5B,WACWuI,EAAc7D,KACtBI,YAAgByD,EAAcxD,eAGnC,kBAAC,IAAD,CAAK/E,UAAU,cACb,kBAAC,GAAD,CAAOE,MAAO,EAAGF,UAAW,wBACzBuI,EAAc7D,KADjB,UAGC6D,EAAcoB,MAAMzF,KAAI,SAAC0F,GAAD,OACvB,kBAAC,IAAD,CAAK5J,UAAW,YAAYQ,IAAKoJ,EAAKlF,MACpC,kBAAC,GAAD,CAAOxE,MAAO,EAAGF,UAAU,aACxB4J,EAAKC,MAER,uBAAGC,KAAMF,EAAKvI,IAAK0E,OAAO,SAASgE,IAAI,uBAAuBH,EAAKlF,c,qBCpK3EsF,GAAuB,CAC3B,iBAAkB,OAClB,kBAAmB,mCACnB,iBAAkB,sDAOPC,GAAgBzI,YAAU,CACnCC,YAAa,gBACbC,UAAWC,YAAe,CAAEC,QANhB,6CAOZC,UAAW,SAACC,GAAD,MAAc,CACvBoI,cAAepI,EAAQE,MAAM,CAC3BA,MAAO,gBAAEmI,EAAF,EAAEA,aAAclI,EAAhB,EAAgBA,MAAhB,MAPiB,CAAEZ,IAOsB,kBAAD,OAAmB8I,EAAnB,8DAAqFlI,GAPrGX,QAAS0I,WAa5CI,GACAH,GADAG,sBChBIxG,GAAgBjB,IAAhBiB,KAAM3D,GAAU0C,IAAV1C,MACNiI,GAAWC,IAAXD,OAEFmC,GACJ,sEA0EaC,GAxEF,SAAC,GAAoB,IAAD,EAAjB3G,EAAiB,EAAjBA,WACd,EAAwCvE,mBAAS,kBAAjD,mBAAO+K,EAAP,KAAqBI,EAArB,KACcC,EAAeJ,GAAsB,CACjDD,eACAlI,MAAO0B,EAAa,EAAI,KAFlBd,KAKAA,EAASN,EAAmB,KAA5BM,KACR,OAAI,OAAC2H,QAAD,IAACA,OAAD,EAACA,EAAYpH,OAEf,kBAAC,IAAD,CAAKH,OAAQ,CAAC,GAAI,IAAKjD,UAAU,0BAC7B2D,GACA,kBAAC,IAAD,CAAKT,KAAM,IACT,kBAAC,IAAD,CACEuH,YAAU,EACVzK,UAAU,cACV4F,YAAY,kBACZ8E,iBAAiB,WACjB7E,SAAU,SAACzC,GAAD,OAAWmH,EAAgBnH,IACrCuH,aAAc,SAACC,EAAOC,GAAR,OACZA,EAAOC,SAASpF,cAAcqF,QAAQH,EAAMlF,gBAAkB,IAG9D,kBAAC,GAAD,CAAQtC,MAAM,kBAAd,kBAVJ,OAWKP,QAXL,IAWKA,GAXL,UAWKA,EAAMA,YAXX,aAWK,EAAYyC,MAAMpB,KAAI,SAACsE,GAAD,OAAU,kBAAC,GAAD,CAAQpF,MAAOoF,EAAK9D,MAAO8D,EAAK9D,WAIxE8F,EAAWpH,MAAMc,KAAI,SAAC8G,EAAMhE,GAAP,uBACpB,kBAAC,IAAD,CAAKf,GAAI,GAAIC,GAAI,GAAIC,GAAI,EAAG3F,IAAKwG,GAC/B,kBAAC,IAAD,CAAMV,WAAS,EAACtG,UAAU,aACxB,uBAAG8J,KAAMkB,EAAK3J,IAAK0E,OAAO,SAASgE,IAAI,uBACrC,yBAAK/J,UAAU,wBACb,kBAAC,GAAD,CAAOA,UAAU,aAAaE,MAAO,GAClC8K,EAAKtG,MAER,yBACE1D,MAAO,CAAEiK,SAAU,QAASC,UAAW,SACvC1G,KAAS,OAAJwG,QAAI,IAAJA,GAAA,UAAAA,EAAMG,aAAN,mBAAaC,iBAAb,eAAwBC,aAAchB,GAC3ChE,IAAI,UAGR,2BACG2E,EAAKjG,YAAc,IAAnB,UACMiG,EAAKjG,YAAYuG,UAAU,EAAG,KADpC,OAEGN,EAAKjG,aAEX,yBAAK/E,UAAU,sBACb,6BACE,kBAAC,IAAD,CACEwE,KACE,UAAAwG,EAAKO,SAAS,UAAd,mBAAkBJ,aAAlB,mBAAyBC,iBAAzB,eAAoCC,aACpChB,GAEFhE,IAAI,SAEN,kBAAC,GAAD,CAAMrG,UAAU,iBAAhB,UACGgL,EAAKO,SAAS,UADjB,aACG,EAAkB7G,OAGvB,kBAAC,GAAD,KACG8G,KAAOR,EAAKS,eAAeC,QAAQ,MAAMC,mBArD3B,kBAAC,EAAD,O,OCoBlBC,I,GAAAA,GAlCf,WACE,OACE,yBAAK5L,UAAU,OACb,yBAAKA,UAAU,UACb,kBAAC,EAAD,OAEF,yBAAKA,UAAU,QACb,kBAAC,IAAD,KACE,yBAAKA,UAAU,UACb,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAO6L,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,cAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,mBAChB,kBAAC,GAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAChB,kBAAC,GAAD,UAKR,kBAAC,EAAD,S,kBC9BOC,gBAAe,CAC5BC,SAAO,sBACJzK,EAAUE,YAAcF,EAAUyK,SAD9B,gBAEJ/B,GAAcxI,YAAcwI,GAAc+B,SAFtC,IAIPC,WAAY,SAACC,GAAD,OACZA,IAAuBC,OAAO5K,EAAU0K,e,OCD1CG,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAUC,MAAOA,IACf,kBAAC,GAAD,SAKNC,SAASC,eAAe,W","file":"static/js/main.b47ec06f.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {Button, Menu, Typography} from 'antd';\nimport { Link } from 'react-router-dom';\nimport {HomeOutlined, MoneyCollectOutlined, BulbOutlined, FundOutlined, MenuOutlined} from '@ant-design/icons';\nimport \"./style.css\";\nexport const Navbar = () => {\n    const [ activeMenu, setActiveMenu ] = useState(true);\n    const [screenSize, setScreenSize ] = useState(undefined);\n\n    useEffect(() => {\n        const handleResize = () => setScreenSize(window.innerWidth);\n        window.addEventListener('resize', handleResize);\n\n        handleResize();\n        return () => window.removeEventListener('resize', handleResize);\n    }, []);\n\n    useEffect(() => {\n        if(screenSize <= 800) {\n            setActiveMenu(false);\n        } else {\n            setActiveMenu(true);\n        }\n    }, [screenSize]);\n\n\n    return (\n        <div className= \"nav-container\">\n            <div className= \"logo-container\">\n                {/* <Avatar/> */}\n                <Typography.Title level={2} className=\"logo\">\n                    <Link to=\"/\">Crypto Grid</Link>\n                </Typography.Title>\n                <Button className= \"menu-control-container\" onClick={() => setActiveMenu(!activeMenu)}><MenuOutlined/></Button>\n            </div>\n            {activeMenu && (\n            <Menu theme=\"dark\" className=\"ant-menu\">\n                <Menu.Item key={'homes'} icon={<HomeOutlined/>} >\n                    <Link to=\"/\">Home</Link>\n                </Menu.Item>\n                <Menu.Item key={'cryptoss'} icon={<FundOutlined/>}>\n                    <Link to=\"/crypto\">Crypto Currencies</Link>\n                </Menu.Item>\n                <Menu.Item key={'exchangess'} icon={<MoneyCollectOutlined/>}>\n                    <Link to=\"/exchanges\">Exchanges</Link>\n                </Menu.Item>\n                <Menu.Item key={'newss'} icon={<BulbOutlined/>}>\n                    <Link to=\"/news\">News</Link>\n                </Menu.Item>\n            </Menu>\n            )}\n        </div>\n    );\n};\nexport default Navbar;","import React from 'react'\nimport \"./style.css\";\n\nconst Loader = () => {\n    return (\n        <div className= \"loader-container\">\n            <div className= \"loader\"></div>\n            \n        </div>\n    )\n}\n\nexport default Loader\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Typography, Space } from \"antd\";\nimport \"./style.css\";\n\nconst Footer = () => {\n  return (\n    <div className=\"footer\">\n      <Typography.Title\n        level={5}\n        style={{ color: \"#00748A\", textAlign: \"center\" }}\n      >\n        The Crypto Grid\n      </Typography.Title>\n      <Space>\n        <Link to=\"/\">Home</Link>\n        <Link to=\"/exchanges\">Exchanges</Link>\n        <Link to=\"/news\">News</Link>\n      </Space>\n    </div>\n  );\n};\n\nexport default Footer;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\nconst cryptoApiHeaders = {\n  \"x-rapidapi-host\": \"coinranking1.p.rapidapi.com\",\n  \"x-rapidapi-key\": \"c374d33544msh7476492ca5f567dp1211d8jsn2a382df22e9d\",\n};\n\nconst baseUrl = \"https://coinranking1.p.rapidapi.com\";\n\nconst createRequest = (url) => ({ url, headers: cryptoApiHeaders });\n\nexport const cryptoApi = createApi({\n  reducerPath: \"cryptoApi\",\n  baseQuery: fetchBaseQuery({ baseUrl }),\n  endpoints: (builder) => ({\n    getCryptos: builder.query({\n      query: (count) => createRequest(`/coins?limit=${count}`),\n    }),\n    getCryptoDetails: builder.query({\n      query: (coinId) => createRequest(`/coin/${coinId}`),\n    }),\n    getCryptoHistory: builder.query({\n      query: ({coinId, timePeriod}) => createRequest(`/coin/${coinId}/history/${timePeriod}`),\n    }),\n    getExchanges: builder.query({\n      query: () => createRequest('/exchanges')\n    }),\n  }),\n});\n\nexport const { useGetCryptosQuery, useGetCryptoDetailsQuery, useGetCryptoHistoryQuery, useGetExchangesQuery } = cryptoApi;\n","import React from 'react'\nimport millify from 'millify';\nimport { Typography, Row, Col, Statistic} from 'antd';\nimport { Link } from 'react-router-dom';\nimport { useGetCryptosQuery } from '../services/cryptoApi';\nimport {Crypto, News} from '../pages';\nimport Loader from '../components/Loader';\nconst { Title } = Typography;\n\n\n\nconst Homepage = () => {\n    const { data, isFetching } = useGetCryptosQuery(10);\n    const globalStats = data?.data?.stats;\n    // console.log(globalStats);\n\n    if(isFetching) return <Loader/>;\n    return (\n        <>  <div className=\"global-stat-container\">\n            <Title level={2} className=\"heading\">Global Crypto Stats</Title>\n            <Row gutter={[32, 32]}>\n                <Col span={12}><Statistic title=\"Total Cryptocurrencies\" value= {globalStats.total} /></Col>\n                <Col span={12}><Statistic title=\"Total Exchanges\" value= {millify(globalStats.totalExchanges)} /></Col>\n                <Col span={12}><Statistic title=\"Total Market Cap\" value= {millify(globalStats.totalMarketCap)} /></Col>\n                <Col span={12}><Statistic title=\"Total 24 Hour Volume\" value= {millify(globalStats.total24hVolume)} /></Col>\n                <Col span={12}><Statistic title=\"Total Total Markets\" value= {millify(globalStats.totalMarkets)} /></Col>\n            </Row>\n            </div>\n            <div className=\"top-ten-container\">\n            <div className=\"home-heading-container\">\n                <Title level={2} className=\"home-title\">Top 10 Cryptocurrencies</Title>\n                <Title level={3} className=\"show-more\"><Link to='/crypto'>Show More</Link></Title>\n            </div>\n            </div>\n            <Crypto simplified/>\n            <div className=\"home-heading-container\">\n                <Title level={2} className=\"home-title\">Latest Crytpo News</Title>\n                <Title level={3}><Link to='/news'>Show More</Link></Title>\n            </div>\n            <News simplified/>\n        </>\n    )\n}\n\nexport default Homepage\n","import React from 'react';\nimport millify from 'millify';\nimport { Collapse, Row, Col, Typography, Avatar } from 'antd';\nimport HTMLReactParser from 'html-react-parser';\n\nimport { useGetExchangesQuery } from '../services/cryptoApi';\nimport Loader from '../components/Loader';\n\nconst { Text } = Typography;\nconst { Panel } = Collapse;\n\nconst Exchanges = () => {\n    const { data, isFetching } = useGetExchangesQuery();\n    const exchangesList = data?.data?.exchanges;\n    if (isFetching) return <Loader/>\n\n    return (\n        <>\n        <Row className=\"exchange-header-container\">\n            <Col span={6}> Exchanges</Col>\n            <Col span={6}> 24 Hour Trade Volume </Col>\n            <Col span={6}> Markets</Col>\n            <Col span={6}> Change</Col>\n        </Row>\n        <Row>\n            {exchangesList.map((exchange) =>(\n                <Col span={24}>\n                    <Collapse>\n                    <Panel\n                        key={exchange.id}\n                        showArrow={false}\n                        header={(\n                            <Row key= {exchange.id} >\n                                <Col span={6}>\n                                    <Text><strong>{exchange.rank}.</strong></Text>\n                                    <Avatar className=\"exchange-image\" src= {exchange.iconUrl} />\n                                    <Text><strong>{exchange.name}</strong></Text>\n                                </Col>\n                                <Col span={6}>${millify(exchange.volume)}</Col>\n                                <Col span={6}>${millify(exchange.numberOfMarkets)}</Col>\n                                <Col span={6}>${millify(exchange.marketShare)}</Col>\n                            </Row>\n                        )}\n                        >\n                            {HTMLReactParser(exchange.description || '')}\n                        </Panel>\n                    </Collapse>\n                </Col>\n            ))}\n        </Row>\n        </>\n    );\n};\n\nexport default Exchanges;\n","import React, { useState, useEffect } from \"react\";\nimport millify from \"millify\";\nimport { Link } from \"react-router-dom\";\nimport { Card, Row, Col, Input } from \"antd\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport Loader from '../components/Loader';\nconst Crypto = ({ simplified }) => {\n  const count = simplified ? 10 : 100;\n  const { data: cryptosList, isFetching } = useGetCryptosQuery(count);\n  const [cryptos, setCryptos] = useState();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  useEffect(() => {\n    setCryptos(cryptosList?.data?.coins);\n    const filteredData = cryptosList?.data?.coins.filter((item) =>\n      item.name.toLowerCase().includes(searchTerm)\n    );\n\n    setCryptos(filteredData);\n  }, [cryptosList, searchTerm]);\n\n  if (isFetching) return <Loader/>;\n\n  return (\n    <>\n      {!simplified && (\n        <div className=\"search-crypto\">\n          <Input\n            placeholder=\"Search Crypto\"\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n        </div>\n      )}\n\n      <Row gutter={[32, 32]} className=\"crypto-card-container\">\n        {cryptos?.map((currency) => (\n          <Col xs={24} sm={12} lg={6} className=\"crypto-card\" key={currency.id} >\n            <Link to={`/crypto/${currency.id}`}>\n              <Card\n                theme=\"dark\"\n                title={`${currency.rank}. ${currency.name}`}\n                extra={\n                  <img\n                    className=\"crypto-image\"\n                    src={currency.iconUrl}\n                    alt=\"crypto-icon\"\n                  />\n                }\n                hoverable\n              >\n                <p>Price: ${millify(currency.price)} USD</p>\n                <p>Market Cap: {millify(currency.marketCap)}</p>\n                <p>Daily Change: {millify(currency.change)}</p>\n              </Card>\n            </Link>\n          </Col>\n        ))}\n      </Row>\n    </>\n  );\n};\n\nexport default Crypto;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { Col, Row, Typography } from \"antd\";\n\nconst { Title } = Typography;\n\nconst LineChart = ({ coinHistory, currentPrice, coinName }) => {\n  const coinPrice = [];\n  const coinTimeStamp = [];\n\n  for (let i = 0; i < coinHistory?.data?.history?.length; i += 1) {\n    coinPrice.push(coinHistory.data.history[i].price);\n    coinTimeStamp.push(\n      new Date(coinHistory.data.history[i].timestamp).toLocaleDateString()\n    );\n  }\n  const data = {\n    labels: coinTimeStamp,\n    datasets: [\n      {\n        label: \"Price in USD\",\n        data: coinPrice,\n        fill: false,\n        backgroundColor: \"#00f9ff\",\n        borderColor: \"#00f9ff\",\n      },\n    ],\n  };\n\n  const options = {\n    scale: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <>\n      <Row className=\"chart-header\">\n        <Title level={2} className=\"chart-title\">\n          {coinName}\n        </Title>\n        <Col className=\"price-container\">\n          <Title level={5} className=\"price-change\">\n            {coinHistory?.data?.change}%\n          </Title>\n          <Title level={5} className=\"current-price\">\n            Current {coinName} Price: $ {currentPrice}%\n          </Title>\n        </Col>\n      </Row>\n      <Line data={data} options={options} />\n    </>\n  );\n};\n\nexport default LineChart;\n","import React, { useState } from \"react\";\nimport HTMLReactParser from \"html-react-parser\";\nimport { useParams } from \"react-router-dom\";\nimport millify from \"millify\";\nimport { Col, Row, Typography, Select } from \"antd\";\nimport {\n  MoneyCollectOutlined,\n  DollarCircleOutlined,\n  FundOutlined,\n  ExclamationCircleOutlined,\n  StopOutlined,\n  TrophyOutlined,\n  CheckOutlined,\n  NumberOutlined,\n  ThunderboltOutlined,\n} from \"@ant-design/icons\";\nimport { useGetCryptoDetailsQuery, useGetCryptoHistoryQuery } from \"../services/cryptoApi\";\nimport Loader from '../components/Loader';\nimport LineChart from '../components/LineChart';\n\nconst { Title, Text } = Typography;\nconst { Option } = Select;\n\nconst CryptoDetails = () => {\n  const { coinId } = useParams();\n  const [timePeriod, setTimePeriod] = useState(\"24h\");\n  const { data, isFetching } = useGetCryptoDetailsQuery(coinId);\n  const { data: coinHistory } = useGetCryptoHistoryQuery({coinId, timePeriod});\n\n  const cryptoDetails = data?.data?.coin;\n\n  //   console.log(cryptoDetails);\n  if (isFetching) return <Loader/>;\n  const time = [\"24h\", \"7d\", \"30d\", \"1y\", \"5y\"];\n\n  const stats = [\n    {\n      title: \"Price to USD\",\n      value: `$ ${cryptoDetails.price && millify(cryptoDetails.price)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    { title: \"Rank\", value: cryptoDetails.rank, icon: <NumberOutlined /> },\n    {\n      title: \"24h Volume\",\n      value: `$ ${cryptoDetails.volume && millify(cryptoDetails.volume)}`,\n      icon: <ThunderboltOutlined />,\n    },\n    {\n      title: \"Market Cap\",\n      value: `$ ${cryptoDetails.marketCap && millify(cryptoDetails.marketCap)}`,\n      icon: <DollarCircleOutlined />,\n    },\n    {\n      title: \"All Time High(Daily Avg.)\",\n      value: `$ ${millify(cryptoDetails.allTimeHigh.price)}`,\n      icon: <TrophyOutlined />,\n    },\n  ];\n\n  const genericStats = [\n    {\n      title: \"Number Of Markets\",\n      value: cryptoDetails.numberOfMarkets,\n      icon: <FundOutlined />,\n    },\n    {\n      title: \"Number Of Exchanges\",\n      value: cryptoDetails.numberOfExchanges,\n      icon: <MoneyCollectOutlined />,\n    },\n    {\n      title: \"Aprroved Supply\",\n      value: cryptoDetails.approvedSupply ? (\n        <CheckOutlined />\n      ) : (\n        <StopOutlined />\n      ),\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Total Supply\",\n      value: `$ ${millify(cryptoDetails.totalSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n    {\n      title: \"Circulating Supply\",\n      value: `$ ${millify(cryptoDetails.circulatingSupply)}`,\n      icon: <ExclamationCircleOutlined />,\n    },\n  ];\n    console.log(coinHistory);\n  return (\n    <Col className=\"coin-detail-container\">\n      <Col className=\"coin-heading-container\">\n        <Title level={2} className=\"coin-name\">\n          {cryptoDetails.name} ({cryptoDetails.slug}) Price\n        </Title>\n        <p>\n          {cryptoDetails.name} live price in USD. View value statistics, market\n          cap and supply.\n        </p>\n      </Col>\n      <Select\n        theme=\"dark\"\n        defaultValue=\"24h\"\n        className=\"select-timeperiod\"\n        placeholder=\"Select Time Period\"\n        onChange={(value) => setTimePeriod(value)}\n      >\n        {time.map((date) => (\n          <Option key={date}>{date}</Option>\n        ))}\n      </Select>\n      <LineChart coinHistory={coinHistory} currentPrice={millify(cryptoDetails.price)} coinName={cryptoDetails.name}/>\n      <Col className=\"stats-container\">\n        <Col className=\"coin-value-statistics\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              {cryptoDetails.name} Value Statistics\n            </Title>\n            <p>{cryptoDetails.name} statistic overivew:</p>\n          </Col>\n          {stats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\"key={title}>\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n        <Col className=\"other-stats-info\">\n          <Col className=\"coin-value-statistics-heading\">\n            <Title level={3} className=\"coin-details-heading\">\n              Other Statistics\n            </Title>\n            <p>Statistic overivew of all Cryptocurrencies:</p>\n          </Col>\n          {genericStats.map(({ icon, title, value }) => (\n            <Col className=\"coin-stats\"key={title}>\n              <Col className=\"coin-stats-name\">\n                <Text>{icon}</Text>\n                <Text>{title}</Text>\n              </Col>\n              <Text className=\"stats\">{value}</Text>\n            </Col>\n          ))}\n        </Col>\n      </Col>\n      <Col className=\"coin-desc-link\">\n        <Row className=\"coin-desc\">\n          <Title level={3} className= \"coin-details-heading\">\n            What is {cryptoDetails.name}\n            {HTMLReactParser(cryptoDetails.description)}\n          </Title>\n        </Row>\n        <Col className=\"coin-links\">\n          <Title level={3} className= \"coin-details-heading\">\n            {cryptoDetails.name} Links\n          </Title>\n          {cryptoDetails.links.map((link) => (\n            <Row className= \"coin-link\" key={link.name}>\n              <Title level={5} className=\"link-name\">\n                {link.type}\n              </Title>\n              <a href={link.url} target=\"_blank\" rel=\"noopener noreferrer\">{link.name}</a>\n            </Row>\n          ))}\n        </Col>\n      </Col>\n    </Col>\n  );\n};\n\nexport default CryptoDetails;\n","import { createApi, fetchBaseQuery } from \"@reduxjs/toolkit/query/react\";\n\nconst cryptoNewsApiHeaders = {\n  \"x-bingapis-sdk\": \"true\",\n  \"x-rapidapi-host\": \"bing-news-search1.p.rapidapi.com\",\n  \"x-rapidapi-key\": \"c374d33544msh7476492ca5f567dp1211d8jsn2a382df22e9d\",\n};\n\nconst baseUrl = 'https://bing-news-search1.p.rapidapi.com';\n\nconst createRequest = (url) => ({ url, headers: cryptoNewsApiHeaders });\n\nexport const cryptoNewsApi = createApi({\n    reducerPath: \"cryptoNewsApi\",\n    baseQuery: fetchBaseQuery({ baseUrl }),\n    endpoints: (builder) => ({\n      getCryptoNews: builder.query({\n        query: ({newsCategory, count}) => createRequest(`/news/search?q=${newsCategory}&safeSearch=Off&textFormat=Raw&freshness=Day&count=${count}`),\n      }),\n    }),\n  });\n\n  export const {\n    useGetCryptoNewsQuery,\n} = cryptoNewsApi;","import React, { useState } from \"react\";\nimport { Select, Typography, Row, Col, Avatar, Card } from \"antd\";\nimport moment from \"moment\";\n\nimport { useGetCryptoNewsQuery } from \"../services/cryptoNewsApi\";\nimport { useGetCryptosQuery } from \"../services/cryptoApi\";\nimport Loader from '../components/Loader';\nconst { Text, Title } = Typography;\nconst { Option } = Select;\n\nconst demoImageUrl =\n  \"http://coinrevolution.com/wp-content/uploads/2020/06/cryptonews.jpg\";\n\nconst News = ({ simplified }) => {\n  const [newsCategory, setNewsCategory] = useState('Cryptocurrency');\n  const { data: cryptoNews } = useGetCryptoNewsQuery({\n    newsCategory,\n    count: simplified ? 6 : 12,\n  });\n  // console.log(cryptoNews);\n  const { data } = useGetCryptosQuery(100);\n  if (!cryptoNews?.value) return <Loader/>;\n  return (\n    <Row gutter={[24, 24]} className=\"crypto-card-container\">\n      {!simplified && (\n        <Col span={24}>\n          <Select\n            showSearch\n            className=\"select-news\"\n            placeholder=\"Select a Crypto\"\n            optionFilterProp=\"children\"\n            onChange={(value) => setNewsCategory(value)}\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n          >\n              <Option value=\"Cryptocurrency\">Cryptocurrency</Option>\n              {data?.data?.coins.map((coin) => <Option value={coin.name}>{coin.name}</Option>)}\n          </Select>\n        </Col>\n      )}\n      {cryptoNews.value.map((news, i) => (\n        <Col xs={24} sm={12} lg={8} key={i}>\n          <Card hoverable className=\"news-card\">\n            <a href={news.url} target=\"_blank\" rel=\"noopener noreferrer\">\n              <div className=\"news-image-container\">\n                <Title className=\"news-title\" level={4}>\n                  {news.name}\n                </Title>\n                <img\n                  style={{ maxWidth: \"200px\", maxHeight: \"200px\" }}\n                  src={news?.image?.thumbnail?.contentUrl || demoImageUrl}\n                  alt=\"news\"\n                />\n              </div>\n              <p>\n                {news.description > 100\n                  ? `${news.description.substring(0, 100)}...`\n                  : news.description}\n              </p>\n              <div className=\"provider-container\">\n                <div>\n                  <Avatar\n                    src={\n                      news.provider[0]?.image?.thumbnail?.contentUrl ||\n                      demoImageUrl\n                    }\n                    alt=\"news\"\n                  />\n                  <Text className=\"provider-name\">\n                    {news.provider[0]?.name}\n                  </Text>\n                </div>\n                <Text>\n                  {moment(news.datePublished).startOf(\"ss\").fromNow()}\n                </Text>\n              </div>\n            </a>\n          </Card>\n        </Col>\n      ))}\n    </Row>\n  );\n};\n\nexport default News;\n","import React from 'react';\nimport { Switch, Route } from \"react-router-dom\";\nimport { Layout } from \"antd\";\nimport { Navbar, Footer } from \"./components\";\nimport { Crypto, Exchanges, Homepage, CryptoDetails, News } from \"./pages\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <div className=\"navbar\">\n        <Navbar />\n      </div>\n      <div className=\"main\">\n        <Layout>\n          <div className=\"routes\">\n            <Switch>\n              <Route exact path=\"/\">\n                <Homepage />\n              </Route>\n              <Route exact path=\"/exchanges\">\n                <Exchanges />\n              </Route>\n              <Route exact path=\"/crypto\">\n                <Crypto />\n              </Route>\n              <Route exact path=\"/crypto/:coinId\">\n                <CryptoDetails />\n              </Route>\n              <Route exact path=\"/news\">\n                <News />\n              </Route>\n            </Switch>\n          </div>\n        </Layout>\n        <Footer />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport { cryptoApi } from '../services/cryptoApi';\nimport { cryptoNewsApi } from '../services/cryptoNewsApi';\n\nexport default configureStore({\n  reducer: {\n    [cryptoApi.reducerPath]: cryptoApi.reducer,\n    [cryptoNewsApi.reducerPath]: cryptoNewsApi.reducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n  getDefaultMiddleware().concat(cryptoApi.middleware),\n  \n});","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport App from \"./App\";\n\n\nimport store from \"./app/store\";\nimport \"antd/dist/antd.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Router>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </Router>\n  </React.StrictMode>,\n\n  document.getElementById(\"root\")\n);\n\n\n"],"sourceRoot":""}